local start, options = 0, 1

function init(self)
	msg.post(".", "acquire_input_focus")

	self.wait_time_for_ready = 60 * 2
	self.counter = 0
	self.state = start
	self.ready = false
	
end

function final(self)
	msg.post(".", "release_input_focus")
end

function update(self, dt)

	self.counter = self.counter + 1

	if self.counter == self.wait_time_for_ready then
		--msg.post("/Sound#BGM","play_sound")
		self.ready = true
	end

end

function on_message(self, message_id, message, sender)

end

function on_input(self, action_id, action)

	local made_selection = false 
	local selection_pressed = false

	if self.ready == true then

		if action_id == hash("up") and action.pressed == true then

			made_selection = true
			
			if self.state == start then

				local pos = go.get_position("/Selector")

				pos.y = 46

				go.set_position(pos, "/Selector")

				self.state = options	

			elseif self.state == options then
				local pos = go.get_position("/Selector")

				pos.y = 76

				go.set_position(pos, "/Selector")	

				self.state = start	
				
			end

		elseif action_id == hash("down") and action.pressed == true then

			made_selection = true
			
			if self.state == start then

				local pos = go.get_position("/Selector")

				pos.y = 46

				go.set_position(pos, "/Selector")

				self.state = options	

			elseif self.state == options then
				local pos = go.get_position("/Selector")

				pos.y = 76

				go.set_position(pos, "/Selector")	

				self.state = start	
			end

		elseif action_id == hash("accept") then

			selection_pressed = true

			if self.state == start then
				
				self.ready = false
				msg.post("Loader:/GameObject#Loader", "load", { loadTarget = "StageSelect" })

			elseif self.state == options then

				
					
			end
		end

		if made_selection == true then
			
			msg.post("/Sound#Select","play_sound")
			
		end

		if selection_pressed == true then
			
			msg.post("/Sound#Selected","play_sound")
			
		end
	end
	
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end
